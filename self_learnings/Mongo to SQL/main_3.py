import pymongo
import pyodbc

# Connect to MongoDB
mongo_client = pymongo.MongoClient('mongodb://localhost:27017')  # Replace with your MongoDB connection string
mongo_db = mongo_client['your_mongodb_database_name']  # Replace with your MongoDB database name
mongo_collection = mongo_db['your_mongodb_collection_name']  # Replace with your MongoDB collection name

# Connect to SQL Server
sql_server_connection_string = 'DRIVER={SQL Server};' \
                              'SERVER=your_sql_server_name;' \
                              'DATABASE=your_sql_server_database_name;' \
                              'UID=your_sql_server_username;' \
                              'PWD=your_sql_server_password'  # Replace with your SQL Server connection details
sql_server_conn = pyodbc.connect(sql_server_connection_string)
sql_server_cursor = sql_server_conn.cursor()

# Create a dictionary to store primary key and foreign key mappings
key_mapping = {}

# Fetch data from MongoDB
mongo_data = mongo_collection.find()

# Loop through MongoDB data and insert into SQL Server
for doc in mongo_data:
    # Extract data from MongoDB document
    field1 = doc.get('field1')  # Replace with your field names
    field2 = doc.get('field2')
    field3 = doc.get('field3')
    
    # Insert data into SQL Server
    sql_server_cursor.execute("INSERT INTO your_sql_server_table_name (field1, field2, field3) "
                              "VALUES (?, ?, ?)", field1, field2, field3)  # Replace with your SQL Server table name
    
    # Get the primary key generated by SQL Server
    sql_server_cursor.execute("SELECT @@IDENTITY AS id")  # Replace with your primary key column name
    row = sql_server_cursor.fetchone()
    primary_key = row.id
    
    # Store the primary key mapping for future reference
    key_mapping[doc['_id']] = primary_key  # Assuming '_id' is the primary key in MongoDB
    
    # Insert foreign key data into related table in SQL Server
    # Replace the following lines with your foreign key table and column names
    # and update the 'foreign_key_value' variable with the appropriate value from the MongoDB document
    foreign_key_table_name = 'Anganwadi_Centers'
    foreign_key_column_name = 'village_id'
    foreign_key_value = doc.get('village_id', None)  # Replace with your field name
    if foreign_key_value is not None:
        sql_server_cursor.execute("INSERT INTO {} ({}, {}) "
                                  "VALUES (?, ?)".format(foreign_key_table_name, foreign_key_column_name, 'value_column_name'),
                                  primary_key, foreign_key_value)  # Replace with your value column name

# Commit and close SQL Server connection
sql_server_conn.commit()
sql_server_conn.close()

print("Data transfer completed successfully from MongoDB to SQL Server!")












\





